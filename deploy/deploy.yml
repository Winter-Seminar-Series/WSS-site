---
- hosts: all
  tasks:
    - name: 'Check mandatory variables are defined'
      assert:
        that:
          - src_root_dir is defined
          - dest_root_dir is defined
          - web_image_version is defined
          - front_image_version is defined
          - secret_key is defined
          - db_password is defined
          - postgres_superuser_pass is defined
          - docker_hub_username is defined
          - docker_hub_password is defined
          - ssl_private_key is defined
          - ssl_fullchain is defined
          - dest_ssl_privkey_path is defined
          - dest_ssl_fullchain_path is defined
          - src_nginx_conf_path is defined
          - sentry_token is defined
          - dropbox_auth_token is defined
          - wss_email_password is defined

    - name: 'Copy compose file'
      copy:
        src: '{{ src_root_dir | mandatory }}/docker-compose.yml'
        dest: '{{ dest_root_dir | mandatory }}'

    - name: 'Copy DB first-time init script'
      copy:
        src: '{{ src_root_dir | mandatory }}/db-first-time-init.sh'
        dest: '{{ dest_root_dir | mandatory }}'

    - name: 'Copy SSL private key'
      copy:
        dest: '{{ dest_ssl_privkey_path | mandatory }}'
        content: '{{ ssl_private_key | mandatory }}'
        mode: '600'

    - name: 'Copy SSL fullchain'
      copy:
        dest: '{{ dest_ssl_fullchain_path | mandatory }}'
        content: '{{ ssl_fullchain | mandatory }}'
        mode: '644'

    - name: 'Copy nginx config'
      copy:
        src: '{{ src_nginx_conf_path }}'
        dest: '{{ dest_root_dir }}/'

    - name: 'Create build directories as a hack to make docker-compose work!'
      file:
        path: '{{ dest_root_dir }}/{{ item }}/'
        state: directory
      loop:
        - backend
        - front
        - static-data-provider

    - name: 'Login to Docker Hub registry (To extend pull rate limit)'
      community.general.docker_login:
        username: '{{ docker_hub_username | mandatory }}'
        password: '{{ docker_hub_password | mandatory }}'

    - name: 'Create .env'
      template:
        src: '{{ src_root_dir }}/deploy/templates/.env.j2'
        dest: '{{ dest_root_dir }}/.env'

    - name: 'Pull images'
      shell: 'cd {{ dest_root_dir }} && docker-compose pull'
      # The builtin docker_compose module sometimes hangs on pulling!
      # See https://github.com/Winter-Seminar-Series/WSS-site/issues/192 for more details.

    - name: 'Stop containers'
      docker_compose:
        project_src: '{{ dest_root_dir }}'
        build: no
        pull: no
        state: absent

    - name: 'Start containers'
      docker_compose:
        project_src: '{{ dest_root_dir }}'
        build: no
        pull: no
        state: present
