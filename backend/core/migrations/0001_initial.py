# Generated by Django 4.2.8 on 2024-01-25 14:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=50)),
                ("order", models.IntegerField(default=1)),
                ("description", models.TextField(blank=True, max_length=1000)),
                ("starting_date", models.DateField()),
                ("ending_date", models.DateField()),
            ],
            options={
                "unique_together": {("name", "order")},
            },
        ),
        migrations.CreateModel(
            name="Speaker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=50)),
                ("designation", models.TextField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True, max_length=1000)),
                ("image", models.ImageField(blank=True, upload_to="speakers/")),
            ],
        ),
        migrations.CreateModel(
            name="Workshop",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=100)),
                ("description", models.TextField(blank=True, max_length=1000)),
                ("speakers", models.ManyToManyField(to="core.speaker")),
            ],
        ),
        migrations.CreateModel(
            name="WorkshopSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("starting_time", models.TimeField()),
                ("ending_time", models.TimeField()),
                ("date", models.DateField()),
                (
                    "workshop",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.workshop"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("S", "Seminar"),
                            ("W", "Workshop"),
                            ("R", "Round Table"),
                            ("L", "Lab Talk"),
                            ("P", "Poster Session"),
                        ],
                        default="S",
                        max_length=1,
                    ),
                ),
                ("name", models.TextField(max_length=200)),
                ("description", models.TextField(blank=True, max_length=1000)),
                ("starting_time", models.TimeField()),
                ("ending_time", models.TimeField()),
                ("date", models.DateField()),
                (
                    "venue",
                    models.CharField(
                        choices=[("V", "Virtual"), ("P", "Physical")],
                        default="V",
                        max_length=1,
                    ),
                ),
                ("link", models.URLField(blank=True)),
                ("poster", models.ImageField(blank=True, upload_to="posters/")),
                ("thumbnail", models.ImageField(blank=True, upload_to="thumbnails/")),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.event"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Seminar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "speaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.speaker"
                    ),
                ),
                (
                    "sub_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="core.subevent"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoundTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("speakers", models.ManyToManyField(to="core.speaker")),
                (
                    "sub_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="core.subevent"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PosterSession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "speaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.speaker"
                    ),
                ),
                (
                    "sub_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="core.subevent"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LabTalk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "speaker",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.speaker"
                    ),
                ),
                (
                    "sub_event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="core.subevent"
                    ),
                ),
            ],
        ),
    ]
