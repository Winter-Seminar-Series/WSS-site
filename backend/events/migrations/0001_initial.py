# -*- coding: utf-8 -*-
# Generated by Django 1.11.26 on 2020-10-22 19:26
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('WSS', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(default=datetime.timedelta(0))),
                ('audience', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ('start_time',),
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slides', models.FileField(blank=True, null=True, upload_to='')),
                ('video_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.BaseEvent')),
            ],
            options={
                'verbose_name_plural': 'Other Events',
            },
            bases=('events.baseevent',),
        ),
        migrations.CreateModel(
            name='PosterMaterial',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Material')),
                ('poster', models.ImageField(blank=True, null=True, upload_to='poster_pictures/')),
            ],
            options={
                'abstract': False,
            },
            bases=('events.material',),
        ),
        migrations.CreateModel(
            name='PosterSession',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.BaseEvent')),
                ('abstract', models.TextField()),
                ('is_persian', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('events.baseevent',),
        ),
        migrations.CreateModel(
            name='Seminar',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.BaseEvent')),
                ('abstract', models.TextField()),
                ('is_keynote', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=('events.baseevent',),
        ),
        migrations.CreateModel(
            name='SeminarMaterial',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Material')),
            ],
            options={
                'abstract': False,
            },
            bases=('events.material',),
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('baseevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.BaseEvent')),
                ('syllabus', models.TextField()),
                ('registration_link', models.URLField(blank=True, null=True)),
                ('price', models.IntegerField(default=30000)),
                ('capacity', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('events.baseevent',),
        ),
        migrations.CreateModel(
            name='WorkshopMaterial',
            fields=[
                ('material_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='events.Material')),
            ],
            options={
                'abstract': False,
            },
            bases=('events.material',),
        ),
        migrations.AddField(
            model_name='material',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_events.material_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='baseevent',
            name='key_words',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='baseevent',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_events.baseevent_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='baseevent',
            name='venue',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='events.Venue'),
        ),
        migrations.AddField(
            model_name='baseevent',
            name='wss',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='WSS.WSS'),
        ),
        migrations.AddField(
            model_name='workshop',
            name='material',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='events.WorkshopMaterial'),
        ),
    ]
