version: "3.3"

services:
  backend-staging:
    build: .
    container_name: backend_staging
    restart: always
    depends_on:
      database:
        condition: "service_healthy"
    command: >
      sh -c "
        ./manage.py migrate;
        ./manage.py compilemessages;
        ./manage.py collectstatic --noinput;
        gunicorn --bind=0.0.0.0:8000 --timeout=90 --workers=6 --preload WSS_Site.wsgi:application;
      "
    volumes:
      - .:/app/wss/
      - ./static/:/static
      - ./media/:/media
      - /var/log/wss-back:/var/log/wss-back
      - cachedata:/cachec
    ports:
      - 8002:8000
    env_file:
      - .env

  database:
    container_name: postgres_staging
    restart: always
    image: dockerhub.ir/postgres
    volumes:
      - ./media/:/media/
      - dbdata:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${WSS_DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dbdata:
  cachedata:

